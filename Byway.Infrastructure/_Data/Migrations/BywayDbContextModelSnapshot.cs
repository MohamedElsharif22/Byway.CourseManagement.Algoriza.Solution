// <auto-generated />
using System;
using Byway.Infrastructure._Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Byway.Infrastructure._Data.Migrations
{
    [DbContext(typeof(BywayDbContext))]
    partial class BywayDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Byway.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 1, 10, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Programming"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 6, 10, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Data Science"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 11, 10, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Web Development"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 16, 10, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Mobile Development"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 21, 10, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Machine Learning"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 26, 10, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "DevOps"
                        });
                });

            modelBuilder.Entity("Byway.Domain.Entities.Checkout.BoughtCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CheckoutId")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("CheckoutId");

                    b.HasIndex("CourseId");

                    b.ToTable("BoughtCourse");
                });

            modelBuilder.Entity("Byway.Domain.Entities.Checkout.Checkout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Checkouts");
                });

            modelBuilder.Entity("Byway.Domain.Entities.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CoverPictureUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int?>("InstructorId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("InstructorId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CoverPictureUrl = "https://images.unsplash.com/photo-1517077304055-6e89abbf09b0?w=800&h=600&fit=crop&crop=center",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 4, 10, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Master C# programming from basics to advanced topics including OOP, LINQ, and async programming.",
                            InstructorId = 1,
                            Price = 99.99m,
                            Rating = 5,
                            Title = "Complete C# Programming Bootcamp"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            CoverPictureUrl = "https://images.unsplash.com/photo-1551288049-bebda4e38f71?w=800&h=600&fit=crop&crop=center",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 6, 10, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Learn data analysis, visualization, and machine learning using Python, pandas, and scikit-learn.",
                            InstructorId = 2,
                            Price = 129.99m,
                            Rating = 4,
                            Title = "Data Science with Python"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            CoverPictureUrl = "https://images.unsplash.com/photo-1633356122544-f134324a6cee?w=800&h=600&fit=crop&crop=center",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 8, 10, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Build dynamic web applications using React, Redux, and modern JavaScript ES6+ features.",
                            InstructorId = 3,
                            Price = 89.99m,
                            Rating = 5,
                            Title = "Modern React Development"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            CoverPictureUrl = "https://images.unsplash.com/photo-1512941937669-90a1b58e7e9c?w=800&h=600&fit=crop&crop=center",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 10, 10, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Create professional iOS applications using Swift and SwiftUI. Publish your first app to the App Store.",
                            InstructorId = 4,
                            Price = 149.99m,
                            Rating = 4,
                            Title = "iOS App Development with Swift"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 5,
                            CoverPictureUrl = "https://images.unsplash.com/photo-1555949963-aa79dcee981c?w=800&h=600&fit=crop&crop=center",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 12, 10, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Introduction to machine learning algorithms, neural networks, and practical implementation.",
                            InstructorId = 5,
                            Price = 179.99m,
                            Rating = 5,
                            Title = "Machine Learning Fundamentals"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 6,
                            CoverPictureUrl = "https://images.unsplash.com/photo-1618401471353-b98afee0b2eb?w=800&h=600&fit=crop&crop=center",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 14, 10, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Learn containerization and orchestration for modern application deployment and scaling.",
                            InstructorId = 6,
                            Price = 139.99m,
                            Rating = 4,
                            Title = "Docker and Kubernetes Mastery"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 1,
                            CoverPictureUrl = "https://images.unsplash.com/photo-1461749280684-dccba630e2f6?w=800&h=600&fit=crop&crop=center",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 16, 10, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Build robust RESTful APIs using ASP.NET Core, Entity Framework, and clean architecture principles.",
                            InstructorId = 7,
                            Price = 119.99m,
                            Rating = 5,
                            Title = "ASP.NET Core Web API Development"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 4,
                            CoverPictureUrl = "https://images.unsplash.com/photo-1607252650355-f7fd0460ccdb?w=800&h=600&fit=crop&crop=center",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 18, 10, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Create native Android applications using Kotlin, Android Jetpack, and Material Design.",
                            InstructorId = 4,
                            Price = 134.99m,
                            Rating = 4,
                            Title = "Android Development with Kotlin"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 3,
                            CoverPictureUrl = "https://images.unsplash.com/photo-1627398242454-45a1465c2479?w=800&h=600&fit=crop&crop=center",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 20, 10, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Master Vue.js 3 with Composition API, Vuex, Vue Router, and build modern single-page applications.",
                            InstructorId = 3,
                            Price = 94.99m,
                            Rating = 4,
                            Title = "Vue.js Complete Guide"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 5,
                            CoverPictureUrl = "https://images.unsplash.com/photo-1620712943543-bcc4688e7485?w=800&h=600&fit=crop&crop=center",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 22, 10, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Advanced machine learning course covering neural networks, CNNs, RNNs, and practical AI applications.",
                            InstructorId = 5,
                            Price = 199.99m,
                            Rating = 5,
                            Title = "Deep Learning with TensorFlow"
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 6,
                            CoverPictureUrl = "https://images.unsplash.com/photo-1451187580459-43490279c0fa?w=800&h=600&fit=crop&crop=center",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 24, 10, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "Design and deploy scalable cloud solutions using AWS services, serverless architecture, and best practices.",
                            InstructorId = 6,
                            Price = 159.99m,
                            Rating = 4,
                            Title = "Cloud Architecture on AWS"
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 3,
                            CoverPictureUrl = "https://images.unsplash.com/photo-1579468118864-1b9ea3c0db4a?w=800&h=600&fit=crop&crop=center",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 26, 10, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Description = "End-to-end web development using Node.js, Express, React, and MongoDB (MERN stack).",
                            InstructorId = 8,
                            Price = 144.99m,
                            Rating = 5,
                            Title = "Full Stack JavaScript Development"
                        });
                });

            modelBuilder.Entity("Byway.Domain.Entities.Instructor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("About")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("jopTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Instructors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            About = "Experienced full-stack developer with 10+ years in the industry. Passionate about teaching clean code and best practices.",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 3, 10, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "John Smith",
                            jopTitle = "Senior Software Engineer"
                        },
                        new
                        {
                            Id = 2,
                            About = "PhD in Statistics with expertise in machine learning and data visualization. Former researcher at Google AI.",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 5, 10, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Sarah Johnson",
                            jopTitle = "Data Scientist"
                        },
                        new
                        {
                            Id = 3,
                            About = "React and Vue.js specialist with a keen eye for UI/UX design. Previously worked at Netflix and Spotify.",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 7, 10, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Mike Chen",
                            jopTitle = "Frontend Developer"
                        },
                        new
                        {
                            Id = 4,
                            About = "iOS and Android development expert. Published 15+ apps on app stores with millions of downloads.",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 9, 10, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Emily Rodriguez",
                            jopTitle = "Mobile App Developer"
                        },
                        new
                        {
                            Id = 5,
                            About = "AI researcher and engineer specializing in deep learning and computer vision. Author of 'ML in Practice'.",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 11, 10, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "David Kumar",
                            jopTitle = "Machine Learning Engineer"
                        },
                        new
                        {
                            Id = 6,
                            About = "Cloud infrastructure expert with AWS and Azure certifications. Specializes in CI/CD and containerization.",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 13, 10, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Lisa Thompson",
                            jopTitle = "DevOps Engineer"
                        },
                        new
                        {
                            Id = 7,
                            About = "Microservices architecture specialist with expertise in .NET, Node.js, and distributed systems.",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 15, 10, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Alex Morgan",
                            jopTitle = "Backend Developer"
                        },
                        new
                        {
                            Id = 8,
                            About = "MERN stack expert with 8 years of experience building scalable web applications for startups.",
                            CreatedAt = new DateTimeOffset(new DateTime(2024, 8, 17, 10, 0, 0, 0, DateTimeKind.Unspecified), new TimeSpan(0, 0, 0, 0, 0)),
                            Name = "Maria Garcia",
                            jopTitle = "Full Stack Developer"
                        });
                });

            modelBuilder.Entity("Byway.Domain.Entities.Checkout.BoughtCourse", b =>
                {
                    b.HasOne("Byway.Domain.Entities.Checkout.Checkout", "Checkout")
                        .WithMany("BoughtCourses")
                        .HasForeignKey("CheckoutId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Byway.Domain.Entities.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Checkout");

                    b.Navigation("Course");
                });

            modelBuilder.Entity("Byway.Domain.Entities.Course", b =>
                {
                    b.HasOne("Byway.Domain.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Byway.Domain.Entities.Instructor", "Instructor")
                        .WithMany("Courses")
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Category");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("Byway.Domain.Entities.Checkout.Checkout", b =>
                {
                    b.Navigation("BoughtCourses");
                });

            modelBuilder.Entity("Byway.Domain.Entities.Instructor", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
